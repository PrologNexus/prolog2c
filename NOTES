NOTES											              -*- Org -*-


* Optimization opportunities
** We need to reduce usage of trail
   - any sort of loop (iota) is constrained by trail-stack size.
** Anonymous variables could get special handling when in argument position
   - unification is a noop, unless nested in another term.
** Mode-declarations
** Determinacy declarations
   - i.e. ":- determinate(PRED)."
** Clause indexing
*** This could even be extended to invoke particular entry-points depending on call-arguments
** Last clause of predicate with a single call can be treated as determinate (and enable TCO)
   - if we know about determinacy of library predicates, this could be
     generalized to multiple calls.
** Can we combine call + exit?
   - i.e. use a "lastcall" instruction.
** Deterministic goal in condition of if-then-else can drop CP dance
* Things to test
** TODO GC symbol-reclamation.
** TODO all numerical functions + operators.
** TODO ordering, particularly between EOL/atom/port and list/structure.
** TODO file:nrev.pl, file:queens.pl, later add as benchmarks.
* Missing
** Compiler
*** Write driver script
    - handles compilation to C.
    - could run separate program to preprocess source.
    - could even filter out latent term_expansions expressions and build
      preprocessor on the fly.
** Library/Runtime
*** Allocate all data areas dynamically
    - add runtime-options to set sizes (trail, args, env).
*** Internal infrastructure for record-db 
    - simple key-value store (hashtable), with operations to add,
      remove, lookup.
    - add (atomic?) type DBREFERENCE, decide on sort-ordering.
*** We could install a SIGSEGV handler and dump all global state
    - stack-ptrs, VM-registers, etc.
*** Runtime-information about defined clauses
    - as minimum: mapping of name/arity -> entry-point.
    - for complete support of clause/2 we would actually need the full
      source.
*** Provide some surt of embedding
    - could have distinct entry point that returns an invocation
      function ptr, calling a suspension primitive from prolog then
      returns some value to the caller, reinvocation continues, with a
      result.
    - "foreign_call(suspend(OUT, IN))"
*** Basic Edinburgh I/O
    - "see", "seen", "seeing", "tell", "told", "telling"
    - stream-alias "user" (default I/O ports)
    - "get", "get0", "put", "peek_char", 
*** file:prelude.pl:
**** Add all-solutions predicates
     - "bagof", "setof", "findall"
*** Non-standard primitives we need for bootstrapping
    | getenv/1                 |                                                                     |
    | command_line_arguments/1 |                                                                     |
    | file_exists/1            | needed for more convenient include/1 and ensure_loaded/1 directives |
    | atomic_list_concat/2     |                                                                     |
    | union/3                  |                                                                     |
* Diagnostics
** Detect singleton variables
** Detect redefinitions of primitives
** Detect non-contiguous predicates
* Issues
** Compiler
*** TODO Detect invalid commmand-line options
*** TODO Improve and extend directives
    - include :: allow omitting file-extension.
    - ensure_loaded :: like "include", but include only once.
    - determinate :: register as determinate, use this to find more TCO
                    opportunities.
*** TODO Unbound var in arithmetic expr doesn't show variable name
   - extend var-rep to hold name, in addition to index.
*** TODO check fixnum range when emitting literals 
*** TODO At some stage auto-include file:prelude.pl
    - unless "-n" option is given.
*** TODO allow file-references to be "library(FILE)"
    - resolve via library-path, settable by "-L".
** Runtime
*** TODO Should "make_term" deref it's args, especially the functor?
*** TODO Is cycle-checking in =deref= really necessary?
*** TODO Use hash-tables for symbol-table
*** TODO Remove GC'd variables from trail
    - and adjust CP-stack entries accordingly.
    - tricky.
*** TODO TAILCALL does not provide a TRACE_EXIT
* List of primitives, callable via =foreign_call=
  | write_char(I)             |                                                            |
  | basic_write(X)            | only handles symbol, number, [], var, port, doesn*t quotes |
  | basic_writeq(X)           | quotes atoms                                               |
  | gc                        | perform garbage collection                                 |
  | halt(I)                   | terminate process                                          |
  | command_line_arguments(X) |                                                            |
* Tests
** file:/archive/prologsuite.tar.gz
** file:/archive/inriasuite.tar.gz
* Library code
** file:/archive/dec10-prolog-library.tgz
* Benchmark suites
** http://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/lang/prolog/code/bench/
