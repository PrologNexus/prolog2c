#!/usr/bin/env tclsh
### run benchmark -*- Tcl -*-


set opts "-DUNSAFE -O3 -fomit-frame-pointer -fno-strict-aliasing -fwrapv -fno-trapping-math"
set filename [lindex $argv 0]
set args [lrange $argv 1 [llength $argv]]
set bench_compile_times 0

if {$filename == "-ct"} {
    set bench_compile_times 1
    set filename [lindex $args 0]
    # uses options that are used in Makefile and qp
    set opts "-DUNSAFE -fomit-frame-pointer -fno-strict-aliasing -fwrapv -fno-trapping-math -fschedule-insns2"
    set args [lrange $args 1 [llength $args]]
}

if {$filename == 0} {
    puts "missing filename"
    exit 1
}

if {![file exists $filename]} {
    puts "no such file"
    exit 1
}

set cfile "[exec mktemp --tmpdir bench-XXXXXX].c"
set rfile [file rootname $filename]
set optfile "${rfile}.opts"
set xfile [exec mktemp --tmpdir bench-XXXXXX]
set rtmp [exec mktemp --tmpdir bench-XXXXXX]


proc RunOnce {} {
    global args xfile rtmp

    if {[catch {eval exec /usr/bin/time -f %U -o $rtmp $xfile $args > /dev/null} result]} {
	puts stderr $result
	exit 1
    }

    set f [open $rtmp r]
    set tm [read -nonewline $f]
    close $f
    file delete -force $rtmp $xfile $cfile
    return $tm
}


if {[catch {exec ./pc -q -n $filename -o $cfile >&@ stdout} result]} {
    puts stderr $result
    file delete -force $rtmp $xfile $cfile
    exit 1
}

if {[file exists $optfile]} {
    set f [open $optfile r]
    eval lappend opts [read -nonewline $f]
    close $f
}

if {$bench_compile_times} {
    eval exec /usr/bin/time -f %U gcc -std=gnu99 -Ilib -I. $opts $cfile -o $xfile -lm -lrt >&@ stdout
    file delete -force $rtmp $xfile $cfile
    exit
} else {
    eval exec gcc -std=gnu99 -Ilib -I. $opts $cfile -o $xfile -lm -lrt >&@ stdout
}

set results {}

for {set i 0} {$i < 5} {incr i} {
    set r [RunOnce]
    lappend results $r
}

set results [lsort -real $results]
puts [expr ([lindex $results 1] + [lindex $results 2] + [lindex $results 3]) / 3]
file delete -force $rtmp $xfile $cfile
