#!/bin/bash
### wrapper script for pc/pi
#
# usage: qp [OPTION ...] FILENAME ARGUMENT ...


PC_PREFIX=
PC_INCLUDEPATH=
# define QP_AUTOCOMPILE_CACHE if ~/.autocompile-cache is not sufficient

set -e

if test -z "$1"; then
    exec ${PC_PREFIX}pi
fi

PC_OPTIONS=
C_OPTIONS=
OPTFLAGS="-O2 -fomit-frame-pointer"
PC_SOURCEFILE=

CACHEDIR="$QP_AUTOCOMPILE_CACHE"

if test -z "${CACHEDIR}"; then
    CACHEDIR=~/.autocompile-cache
fi

while true; do
    case "$1" in
	-h|-help|--help)
	    echo "usage: qp [-h] [-v] [-version] [-purge] [-compress-facts] [-i] [-xref] [OPTION ...] [FILENAME ARGUMENT ...]"
	    exit;;
	-version)
	    exec ${PC_PREFIX}pc -version;;
	-C)
	    shift
	    C_OPTIONS="${C_OPTIONS} $1"
	    shift;;
	-purge)
	    rm -f "${CACHEDIR}"/*
	    exit;;
	-O0)
	    OPTFLAGS=
	    shift;;
	-*)
	    PC_OPTIONS="${PC_OPTIONS} $1"
	    shift;;
	*)
	    PC_SOURCEFILE="$1"
	    shift
	    break;;
    esac
done

if test \! -d "${CACHEDIR}"; then
    mkdir "${CACHEDIR}"
fi

HASH=`md5sum "${PC_SOURCEFILE}" | sed -e 's/^\([a-f0-9]\+\).*$/\1/'`

if test -z "${HASH}"; then
    echo "invalid ${PC_SOURCEFILE}" >2
    exit 1
fi

if test -x "${CACHEDIR}/${HASH}"; then
    exec "${CACHEDIR}/${HASH}" "$@"
fi

PC_SOURCEFILE2=`basename "${PC_SOURCEFILE}"`
CFILE=`mktemp --tmpdir qp-XXXXX.c`
${PC_PREFIX}pc -q "${PC_SOURCEFILE}" ${PC_OPTIONS} -o "${CFILE}"
gcc -std=gnu99 ${OPTFLAGS} -fno-strict-aliasing -fwrapv -DTRACE -DNDEBUG \
    ${C_OPTIONS} ${PC_INCLUDEPATH} -I. "${CFILE}" -o "${CACHEDIR}/${HASH}" \
    -lm -lrt
exec "${CACHEDIR}/${HASH}" "$@"
