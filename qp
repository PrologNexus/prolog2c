#!/bin/bash
### wrapper script for pc/pi
#
# usage: qp [OPTION ...] FILENAME ARGUMENT ...


## Change these to your liking: ############################################

# don't forget a trailing slash
PC_PREFIX=
PC_INCLUDEPATH=.
OPTFLAGS="-O2 -fomit-frame-pointer -DNDEBUG"
CC=gcc
CACHEDIR="${HOME}/.qp"

############################################################################

set -e

if test -z "$1"; then
    exec ${PC_PREFIX}pi
fi

PC_OPTIONS=
C_OPTIONS=
LIBRARY_DIR=
PC_SOURCEFILE=
OFILE=

function usage() {
    echo "usage: qp [OPTION ...] [FILRNAME ARGUMENT ...]"
    echo
    echo "  -help             show this text"
    echo "  -version          show version and exit"
    echo "  -v                show clauses are they are compiled"
    echo "  -i                show intermediate code instead of generating C"
    echo "  -o FILENAME       override output file name (default: <SOURCE_FILE>.c)"
    echo "                    and omit running executable"
    echo "  -compress-facts   compress blocks of facts with ground arguments"
    echo "  -xref             write cross-referencing information instead of"
    echo "                    compiling program"
    echo "  -n                ignore PC_LIBRARY_DIR"
    echo "  -C OPTION         pass OPTION to the C compiler"
    echo "  -O0               compile C code without any optimizations"
    echo "  -g                enable debug-information and call-tracing"
    echo "  -H                read source program from stdin"
    echo "  -purge [FILENAME ...]  delete cached executables for given programs"
    echo "  -key [FILENAME]   list cached executables for given programs"
    echo
    echo "  Other options and files ending in *.o or *.c are passed directly"
    echo "  to the C compiler."
}

while test -n "$1"; do
    case "$1" in
	-h|-help|--help)
	    usage
	    exit;;
	-version)
	    exec ${PC_PREFIX}pc -version;;
	-g)
	    C_OPTIONS="${C_OPTIONS} -DTRACE -g"
	    OPTFLAGS=
	    shift;;
	-C)
	    shift
	    C_OPTIONS="${C_OPTIONS} $1"
	    shift;;
	-xref|-i)
	    XREF=$1
	    shift;;
	-o) 
	    shift
	    OFILE="$1"
	    shift;;
	-purge)
	    shift
	    test -d "${CACHEDIR}" || exit
	    if test -z "$1"; then
		rm -f "${CACHEDIR}"/*
	    else
		while test -n "$1"; do
		    HASH=`md5sum "${1}" | sed -e 's/^\([a-f0-9]\+\).*$/\1/'`
		    rm -f "${CACHEDIR}/${HASH}"
		    shift
		done
	    fi
	    exit;;
	-key)
	    shift
	    test -d "${CACHEDIR}" || exit
	    if test -z "$1"; then
		ls "${CACHEDIR}"
	    else
		while test -n "$1"; do
		    HASH=`md5sum "${1}" | sed -e 's/^\([a-f0-9]\+\).*$/\1/'`
		    if test -e "${CACHEDIR}/${HASH}"; then
			echo ${HASH}
		    fi
		    shift
		done
	    fi
	    exit;;	    
	-O0)
	    OPTFLAGS=
	    shift;;
	-n|-compress-facts)
	    PC_OPTIONS="${PC_OPTIONS} $1"
	    shift;;
	-H)
	    PC_SOURCEFILE=`mktemp --tmpdir qp-XXXX.pl`
	    cat >${PC_SOURCEFILE}
	    shift;;
	-*|*.o|*.c)
	    C_OPTIONS="${C_OPTIONS} $1"
	    shift;;
	*)
	    PC_SOURCEFILE="$1"
	    shift
	    break;;
    esac
done

test -n "${XREF}" && exec ${PC_PREFIX}pc ${XREF} ${PC_OPTIONS} ${PC_SOURCEFILE}

if test \! -d "${CACHEDIR}"; then
    mkdir "${CACHEDIR}"
fi

HASH=`md5sum "${PC_SOURCEFILE}" | sed -e 's/^\([a-f0-9]\+\).*$/\1/'`

if test -z "${HASH}"; then
    echo "invalid ${PC_SOURCEFILE}" >2
    exit 1
fi

if test -x "${CACHEDIR}/${HASH}"; then
    exec "${CACHEDIR}/${HASH}" "$@"
fi

PC_SOURCEFILE2=`basename "${PC_SOURCEFILE}"`
CFILE=`mktemp --tmpdir qp-XXXXX.c`
${PC_PREFIX}pc -q "${PC_SOURCEFILE}" ${PC_OPTIONS} -o "${CFILE}"
"$CC" -std=gnu99 ${OPTFLAGS} -fno-strict-aliasing -fwrapv \
    -I${PC_INCLUDEPATH} -I. "${CFILE}" -o "${CACHEDIR}/${HASH}" \
    -lm -lrt ${C_OPTIONS} 
rm -f "${CFILE}"

if test -n "$OFILE"; then
    cp "${CACHEDIR}/${HASH}" "$OFILE"
else
    exec "${CACHEDIR}/${HASH}" "$@"
fi
